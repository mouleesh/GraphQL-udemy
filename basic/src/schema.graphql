
    type Query {
        me: User!
        posts(query: String): [Post!]!
        users(query: String): [User!]!
        comments: [Comment!]!
    }

    type Mutation {
        createUser(data: CreateUserInput): User!
        deleteUser(id: ID!): User!
        UpdateUser(id: ID!, data: UpdateUserInput): User!
        createPost(data: createPostInput): Post!
        deletePost(id: ID!): Post!
        updatePost(id: ID!, data: UpdatePostInput): Post!
        createComment(data: createCommentInput): Comment!
        deleteComment(id: ID!): Comment!
        updateComment(id: ID!, data: updateCommentInput): Comment!
    }

    input CreateUserInput {
        name: String!, 
        email: String!, 
        age: Int
    }

    input UpdateUserInput {
        name: String,
        email: String,
        age: Int
    }

    input createPostInput {
        title: String!, 
        body: String!, 
        published: Boolean!, 
        author: ID!
    }

    input UpdatePostInput {
        title: String, 
        body: String, 
        published: Boolean,
    }

    input createCommentInput {
        text: String!, 
        author: ID!, 
        post: ID!
    }

    input updateCommentInput {
        text: String
    }

    type User {
        id: ID!
        name: String!
        email: String!
        age: Int
        posts: [Post]!
        comments: [Comment]!
    }

    type Post {
        id: ID!
        title: String!
        body: String!
        published: Boolean!
        author: User!
        comments: [Comment]!
    }

    type Comment {
        id: ID!
        text: String!
        post: Post!
        author: User!
    }